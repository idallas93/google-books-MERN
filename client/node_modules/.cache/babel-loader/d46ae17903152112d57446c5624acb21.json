{"ast":null,"code":"import _slicedToArray from \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\";\n\nfunction Search() {\n  var _useState = useState({\n    title: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchBook = _useState4[0],\n      setSearchBook = _useState4[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n\n\n  useEffect(function () {\n    document.title = \"google book search\";\n\n    if (!searchBook) {\n      return;\n    }\n\n    API.getGoogleBooks(searchBook).then(function (res) {\n      if (res.data.length === 0) {\n        throw new Error(\"No results found.\");\n      }\n\n      if (res.data.status === \"error\") {\n        throw new Error(res.data.message);\n      }\n\n      setBook({\n        title: res.data.items\n      });\n    }); // .catch(err => setError(err))\n  }, [searchBook]);\n\n  var handleInputChange = function handleInputChange(event) {\n    searchBook(event.target.value);\n  };\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n  }; //   if (searchBook === true) {\n  //     allUsers = allUsers.sort((a,b) => {\n  //       console.log(a,b)\n  //       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n  //   }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","SearchForm","Search","title","book","setBook","searchBook","setSearchBook","document","getGoogleBooks","then","res","data","length","Error","status","message","items","handleInputChange","event","target","value","handleFormSubmit","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBACQT,QAAQ,CAAC;AAC/BU,IAAAA,KAAK,EAAE;AADwB,GAAD,CADhB;AAAA;AAAA,MACTC,IADS;AAAA,MACHC,OADG;;AAAA,mBAIoBZ,QAAQ,CAAC,EAAD,CAJ5B;AAAA;AAAA,MAITa,UAJS;AAAA,MAIGC,aAJH,kBAOhB;AACA;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,QAAQ,CAACL,KAAT,GAAiB,oBAAjB;;AAEA,QAAG,CAACG,UAAJ,EAAgB;AACd;AACD;;AAEDN,IAAAA,GAAG,CAACS,cAAJ,CAAmBH,UAAnB,EACGI,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,cAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,UAAIH,GAAG,CAACC,IAAJ,CAASG,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,cAAM,IAAID,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASI,OAAnB,CAAN;AACD;;AACDX,MAAAA,OAAO,CAAC;AACNF,QAAAA,KAAK,EAAEQ,GAAG,CAACC,IAAJ,CAASK;AADV,OAAD,CAAP;AAGD,KAXH,EAPc,CAmBZ;AACH,GApBQ,EAoBN,CAACX,UAAD,CApBM,CAAT;;AAsBD,MAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACjCb,IAAAA,UAAU,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,KAAK,EAAI;AAChCA,IAAAA,KAAK,CAACI,cAAN;AACD,GAFD,CAnCiB,CAsClB;AACA;AACA;AACA;AACA;;;AAEE,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,gBAAgB,EAAED,gBAA9B;AAAgD,IAAA,iBAAiB,EAAEJ,iBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AAKC;;AAGH,eAAehB,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\"\n\nfunction Search() {\n  const [book, setBook] = useState({\n    title: \"\"\n  })\n  const [searchBook, setSearchBook] = useState(\"\");\n\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  useEffect(() => {\n    document.title = \"google book search\";\n\n    if(!searchBook) {\n      return;\n    }\n\n    API.getGoogleBooks(searchBook)\n      .then(res => {\n        if (res.data.length === 0) {\n          throw new Error(\"No results found.\");\n        }\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        setBook({\n          title: res.data.items\n        });\n      })\n      // .catch(err => setError(err))\n  }, [searchBook]);\n\n const handleInputChange = event => {\n   searchBook(event.target.value);\n };\n \n const handleFormSubmit = event => {\n   event.preventDefault();\n }\n//   if (searchBook === true) {\n//     allUsers = allUsers.sort((a,b) => {\n//       console.log(a,b)\n//       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n//   }\n\n  return (\n      <Container fluid>\n        <SearchForm handleFormSubmit={handleFormSubmit} handleInputChange={handleInputChange} />\n      </Container>\n    );\n  }\n\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}