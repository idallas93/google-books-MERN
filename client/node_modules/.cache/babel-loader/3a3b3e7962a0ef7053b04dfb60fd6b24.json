{"ast":null,"code":"import _slicedToArray from \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\";\n\nfunction Search() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchBook = _useState4[0],\n      setSearchBook = _useState4[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  function loadBooks() {\n    API.getGoogleBooks().then(function (res) {\n      setBook(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  var handleInputChange = function handleInputChange(event) {\n    setBook(event.target.value);\n    console.log(event.target.value);\n  }; //   if (searchBook === true) {\n  //     allUsers = allUsers.sort((a,b) => {\n  //       console.log(a,b)\n  //       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n  //   }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleInputChange: handleInputChange,\n    book: book,\n    setSearchBook: setSearchBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","SearchForm","Search","book","setBook","value","searchBook","setSearchBook","loadBooks","getGoogleBooks","then","res","data","catch","err","console","log","handleInputChange","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBACQT,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACTU,IADS;AAAA,MACHC,OADG;;AAAA,mBAEoBX,QAAQ,CAAC;AAACY,IAAAA,KAAK,EAAE;AAAR,GAAD,CAF5B;AAAA;AAAA,MAETC,UAFS;AAAA,MAEGC,aAFH,kBAKhB;AACA;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAASA,SAAT,GAAqB;AACnBR,IAAAA,GAAG,CAACS,cAAJ,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXP,MAAAA,OAAO,CAACO,GAAG,CAACC,IAAL,CAAP;AAAkB,KAFtB,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJZ;AAKD;;AAAA;;AAED,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAEnCd,IAAAA,OAAO,CAACc,KAAK,CAACC,MAAN,CAAad,KAAd,CAAP;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAad,KAAzB;AAED,GALD,CApBgB,CA2BlB;AACA;AACA;AACA;AACA;;;AAEE,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,iBAAiB,EAAEY,iBAA/B;AAAkD,IAAA,IAAI,EAAEd,IAAxD;AAA8D,IAAA,aAAa,EAAEI,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AAKC;;AAGH,eAAeL,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\"\n\nfunction Search() {\n  const [book, setBook] = useState(\"\")\n  const [searchBook, setSearchBook] = useState({value: \"\"});\n\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n\n  function loadBooks() {\n    API.getGoogleBooks()\n      .then(res => {\n        setBook(res.data)}\n      )\n      .catch(err => console.log(err));\n  };\n\n  const handleInputChange = (event) => {\n\n    setBook(event.target.value);\n    console.log(event.target.value)\n\n  };\n\n//   if (searchBook === true) {\n//     allUsers = allUsers.sort((a,b) => {\n//       console.log(a,b)\n//       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n//   }\n\n  return (\n      <Container fluid>\n        <SearchForm handleInputChange={handleInputChange} book={book} setSearchBook={setSearchBook}/>\n      </Container>\n    );\n  }\n\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}