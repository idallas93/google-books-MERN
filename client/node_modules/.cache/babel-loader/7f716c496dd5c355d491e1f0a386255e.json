{"ast":null,"code":"import _objectSpread from \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\";\n\nfunction Search() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchBook = _useState4[0],\n      setSearchBook = _useState4[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  function loadBooks() {\n    API.getGoogleBooks().then(function (res) {\n      setBook({});\n      console.log(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function searchBooks() {} // const handleInputChange = (event) => {\n  //   setBook(event.target.value);\n  //   console.log(event.target.value)\n  // };\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setSearchBook(_objectSpread(_objectSpread({}, searchBook), {}, {\n      [name]: value\n    }));\n    console.log(searchBook);\n  }\n\n  ;\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (searchBook) {\n      API.getGoogleBooks({\n        searchBook // synopsis: searchBooksynopsis\n\n      }).then(function (res) {\n        return loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ; //   if (searchBook === true) {\n  //     allUsers = allUsers.sort((a,b) => {\n  //       console.log(a,b)\n  //       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n  //   }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    handleInputChange: handleInputChange,\n    book: book,\n    setSearchBook: setSearchBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/isaacdallas/Desktop/homeworkOne/google books/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","SearchForm","Search","book","setBook","searchBook","setSearchBook","loadBooks","getGoogleBooks","then","res","console","log","data","catch","err","searchBooks","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBACQT,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACTU,IADS;AAAA,MACHC,OADG;;AAAA,mBAEoBX,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,MAETY,UAFS;AAAA,MAEGC,aAFH,kBAKhB;AACA;;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAASA,SAAT,GAAqB;AACnBP,IAAAA,GAAG,CAACQ,cAAJ,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXN,MAAAA,OAAO,CAAC,EAAD,CAAP;AACFO,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAAsB,KAHxB,EAKGC,KALH,CAKS,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ;AAAA,KALZ;AAMD;;AAAA;;AAED,WAASC,WAAT,GAAuB,CAEtB,CAvBe,CAyBhB;AAEA;AACA;AAEA;;;AAEA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,wBACRA,KAAK,CAACC,MADE;AAAA,QACxBC,IADwB,iBACxBA,IADwB;AAAA,QAClBC,KADkB,iBAClBA,KADkB;AAEhCf,IAAAA,aAAa,iCAAKD,UAAL;AAAiB,OAACe,IAAD,GAAQC;AAAzB,OAAb;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACD;;AAAA;;AAED,WAASiB,gBAAT,CAA0BJ,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIlB,UAAJ,EAAgB;AACdL,MAAAA,GAAG,CAACQ,cAAJ,CAAmB;AAChBH,QAAAA,UADgB,CAEjB;;AAFiB,OAAnB,EAIGI,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIH,SAAS,EAAb;AAAA,OAJX,EAKGO,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ;AAAA,OALZ;AAMD;AACF;;AAAA,GAhDe,CAiDlB;AACA;AACA;AACA;AACA;;AAEE,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,gBAAgB,EAAEO,gBAA9B;AAAgD,IAAA,iBAAiB,EAAEL,iBAAnE;AAAsF,IAAA,IAAI,EAAEd,IAA5F;AAAkG,IAAA,aAAa,EAAEG,aAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AAKC;;AAGH,eAAeJ,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\"\n\nfunction Search() {\n  const [book, setBook] = useState(\"\")\n  const [searchBook, setSearchBook] = useState({});\n\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n\n  function loadBooks() {\n    API.getGoogleBooks()\n      .then(res => {\n        setBook({})\n      console.log(res.data)}\n      )\n      .catch(err => console.log(err));\n  };\n\n  function searchBooks() {\n\n  }\n\n  // const handleInputChange = (event) => {\n\n  //   setBook(event.target.value);\n  //   console.log(event.target.value)\n\n  // };\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setSearchBook({...searchBook, [name]: value})\n    console.log(searchBook)\n  };\n  \n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (searchBook) {\n      API.getGoogleBooks({\n         searchBook\n        // synopsis: searchBooksynopsis\n      })\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n//   if (searchBook === true) {\n//     allUsers = allUsers.sort((a,b) => {\n//       console.log(a,b)\n//       return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n//   }\n\n  return (\n      <Container fluid>\n        <SearchForm handleFormSubmit={handleFormSubmit} handleInputChange={handleInputChange} book={book} setSearchBook={setSearchBook}/>\n      </Container>\n    );\n  }\n\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}